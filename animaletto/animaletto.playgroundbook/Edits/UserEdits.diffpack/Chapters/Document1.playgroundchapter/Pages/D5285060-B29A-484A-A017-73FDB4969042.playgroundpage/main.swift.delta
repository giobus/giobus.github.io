<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Document1.playgroundchapter/Pages/template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>C</string>
			<key>ModifiedRange</key>
			<string>{6713, 1}</string>
			<key>OriginalContent</key>
			<string>/*#-localizable-z</string>
			<key>OriginalRange</key>
			<string>{6713, 17}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>figur</string>
			<key>ModifiedRange</key>
			<string>{6716, 5}</string>
			<key>OriginalContent</key>
			<string>e(sh</string>
			<key>OriginalRange</key>
			<string>{6732, 4}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string> </string>
			<key>ModifiedRange</key>
			<string>{6722, 1}</string>
			<key>OriginalContent</key>
			<string>pesTemp</string>
			<key>OriginalRange</key>
			<string>{6737, 7}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string> vi</string>
			<key>ModifiedRange</key>
			<string>{6725, 3}</string>
			<key>OriginalContent</key>
			<string>te1)*/Set</string>
			<key>OriginalRange</key>
			<string>{6746, 9}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string></string>
			<key>ModifiedRange</key>
			<string>{6729, 0}</string>
			<key>OriginalContent</key>
			<string> up </string>
			<key>OriginalRange</key>
			<string>{6756, 4}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>a</string>
			<key>ModifiedRange</key>
			<string>{6730, 1}</string>
			<key>OriginalContent</key>
			<string>he</string>
			<key>OriginalRange</key>
			<string>{6761, 2}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>int</string>
			<key>ModifiedRange</key>
			<string>{6732, 3}</string>
			<key>OriginalContent</key>
			<string>LiveVi</string>
			<key>OriginalRange</key>
			<string>{6764, 6}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>rattiva</string>
			<key>ModifiedRange</key>
			<string>{6736, 7}</string>
			<key>OriginalContent</key>
			<string>w</string>
			<key>OriginalRange</key>
			<string>{6771, 1}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string></string>
			<key>ModifiedRange</key>
			<string>{6744, 0}</string>
			<key>OriginalContent</key>
			<string>/*#-end-localizable-zone*/</string>
			<key>OriginalRange</key>
			<string>{6773, 26}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>func zampa(punto: Point){
    let line = Graphic.line(start: Point(x: punto.x, y: punto.y), end: Point(x: punto.x, y: punto.y - 110), thickness: 5, color: #colorLiteral(red: 0.0, green: 0.0, blue: 0.0, alpha: 1.0))
    let lineS = Graphic.line(start: Point(x: punto.x, y: punto.y - 75), end: Point(x: punto.x - 25, y: punto.y - 100), thickness: 5, color: #colorLiteral(red: 0.0, green: 0.0, blue: 0.0, alpha: 1.0))
    let lineD = Graphic.line(start: Point(x: punto.x, y: punto.y - 75), end: Point(x: punto.x + 25, y: punto.y - 100), thickness: 5, color: #colorLiteral(red: 0.0, green: 0.0, blue: 0.0, alpha: 1.0))
    scene.place(line)
    scene.place(lineS)
    scene.place(lineD)
}


func becco(punto:Point) {
    let polygon = Graphic.polygon(radius: 30, sides: 3, color: #colorLiteral(red: 1.0, green: 0.22745099663734436, blue: 0.18431374430656433, alpha: 1.0))
    polygon.rotation = 90.0
    scene.place(polygon, at: Point(x: punto.x, y: punto.y))
}


func  corpo (punto:Point) {
    let polygonCorpo = Graphic.polygon(radius: 150, sides: 3, color: #colorLiteral(red: 0.9607843160629272, green: 0.9254902601242065, blue: 0.0, alpha: 1.0))
    polygonCorpo.rotation = 270.0
    scene.place(polygonCorpo, at: Point(x: punto.x, y: punto.y))
}

func occhio(punto:Point) {
    let circle = Graphic.circle(radius: 30, color: #colorLiteral(red: 0.7960784435272217, green: 0.9411764740943909, blue: 1.0, alpha: 1.0))
    scene.place(circle, at: Point(x: punto.x, y: punto.y))
    let pupilla = Graphic.circle(radius: 15, color: #colorLiteral(red: 0.10196079313755035, green: 0.03921568766236305, blue: 0.32156863808631897, alpha: 1.0))
    scene.place(pupilla, at: Point(x: punto.x - 5, y: punto.y - 5))
}

func ala(punto:Point, rotazione:Double) {
    let ala1 = Graphic.polygon(radius: 100, sides: 3, color: #colorLiteral(red: 0.965964138507843, green: 0.7853357195854187, blue: 1.0, alpha: 0.7675))
    ala1.rotation = rotazione
    scene.place(ala1, at: Point(x: punto.x, y: punto.y))
}

/* Scrivi sotto completandolo opportunamente il codice completo per disegnare l'animaletto. Ti consiglio d√¨ aggiungere un elemento alla volta!!

zampa(punto: Point(x: ?, y: ?))
zampa(punto: Point(x: ?, y: ?))
corpo(punto: Point(x: ?, y: ?))
becco(punto: Point(x: 0, y: -55))
occhio(punto: Point(x: ?, y: ?))
occhio(punto: Point(x: ?, y: ?))
ala(punto: Point(x: ?, y: ?), rotazione: ?)
ala(punto: Point(x: ?, y: ?), rotazione: ?)
 */
</string>
			<key>ModifiedRange</key>
			<string>{6762, 2425}</string>
			<key>OriginalContent</key>
			<string>// /*#-localizable-zone(shapesTemplate2)*/Creates a circle graphic./*#-end-localizable-zone*/
let circle = Graphic.circle(radius: 100, color: #colorLiteral(red: 0.4550631046, green: 0.6557807326, blue: 0.9979295135, alpha: 1.0))
scene.place(circle, at: Point.zero)
circle.isDraggable = true
</string>
			<key>OriginalRange</key>
			<string>{6817, 291}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
